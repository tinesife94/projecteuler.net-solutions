"""Python code to solve problem 2 on the projecteuler.net website, available
at:

https://projecteuler.net/problem=2

For your convinience:

Each new term in the Fibonacci sequence is generated by adding the previous
two terms. By starting with 1 and 2, the first 10 terms will be:

1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...

By considering the terms in the Fibonacci sequence whose values do not
exceed four million, find the sum of the even-valued terms.
"""

def fibonacci_numbers_below_lim(lim: int) -> []:
    """Function to obtain all Fibonacci numbers below the limit."""
    numbers = []
    term_a, term_b = 0, 1
    while term_a < lim:
        numbers.append(term_a)
        term_a, term_b = term_b, term_a + term_b
    return numbers

def even_valued_fibonacci_terms(fibonacci_seq : []) -> []:
    """Returns even numbers from the Fibonacci sequence."""
    if not fibonacci_seq:
        return []
    even_numbers = [fibonacci_seq[i] for i in range(0, len(fibonacci_seq), 3)]
    return even_numbers

def sum_even_valued_terms_of_fibonacci_below_lim(lim) -> int:
    """Sums all even values (below lim) of the Fibonacci sequence."""
    return sum(even_valued_fibonacci_terms(fibonacci_numbers_below_lim(lim)))

if __name__ == "__main__":
    import sys
    if len(sys.argv) == 2:
        LIM = int(sys.argv[1])
    else:
        LIM = 4_000_000
    print(sum_even_valued_terms_of_fibonacci_below_lim(LIM))
